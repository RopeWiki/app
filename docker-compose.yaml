# This docker-compose file will bring up a production system.
# As per README.md, direct docker-compose commands are not
# recommended because that requires many environment variables
# to be set.  Instead, the use of deploy_tool.py is recommended
# as per README.md.

# Before any other docker-compose commands above are executed,
# the necessary images must be built according to the instructions
# in README.md.
#   python3 deploy_tool.py <SITE_NAME> dc build

version: '3.6'

services:

  # The RopeWiki MySQL database; see instructions in README.md to build the image
  ropewiki_db:
    image: ropewiki/database
    hostname: ropewiki_db
    init: true
    build:
      context: .
      dockerfile: database/Dockerfile
    environment:
      - MYSQL_ROOT_PASSWORD=${RW_ROOT_DB_PASSWORD:-thispasswordonlyworksuntildbisrestored}
    volumes:
      - ropewiki_database_storage:/var/lib/mysql
#    restart: always

  # The main RopeWiki server running MediaWiki; see instructions in README.md to build the image
  ropewiki_webserver:
    image: ropewiki/webserver
    hostname: ropewiki_webserver
    build:
      context: .
      dockerfile: webserver/Dockerfile
      args:
        codebaseversion: ${CODEBASE_VERSION:-When this image was built with docker-compose, <pre>CODEBASE_VERSION</pre> environment variable was not present.}
    ports:
      - "8080:80"
    environment:
      - WG_PROTOCOL=${WG_PROTOCOL:-http}
      - WG_HOSTNAME=${WG_HOSTNAME:-localhost:8080}
      - WG_DB_SERVER=ropewiki_db
      - WG_DB_USER=${WG_DB_USERNAME:-ropewiki}
      - WG_DB_PASSWORD=${WG_DB_PASSWORD:-thispasswordonlyworksuntildbisrestored}
      - RW_ROBOTS=${RW_ROBOTS:-robots_dev.txt}
    depends_on:
      - ropewiki_db
    volumes:
      - ${IMAGES_FOLDER:?IMAGES_FOLDER environment variable must be set}:/usr/share/nginx/html/ropewiki/images
    #restart: always

  # The reverse proxy that directs traffic to the appropriate places; see instructions in README.md to build the image
  ropewiki_reverse_proxy:
    image: ropewiki/reverse_proxy
    hostname: ropewiki_reverse_proxy
    build:
      context: .
      dockerfile: reverse_proxy/Dockerfile
    logging:
      driver: json-file
      options:
        max-size: 10m
#        max-file: 10
    ports:
      - "80:80"
      - "443:443"
    environment:
      - WG_HOSTNAME=${WG_HOSTNAME:-localhost}
    depends_on:
      - ropewiki_webserver
    volumes:
      - ropewiki_proxy_certs:/etc/letsencrypt
#    restart: always

  # The RopeWiki backup manager; see instructions in README.md to build the image
  ropewiki_backup_manager:
    image: ropewiki/backup_manager
    hostname: ropewiki_backup_manager
    init: true
    build:
      context: .
      dockerfile: backup_manager/Dockerfile
    ports:
      - "22001:22"
    environment:
      - RW_ROOT_DB_PASSWORD=${RW_ROOT_DB_PASSWORD:-}
    depends_on:
      - ropewiki_db
    volumes:
      - ${SQL_BACKUP_FOLDER:?SQL_BACKUP_FOLDER environment variable must be set}:/home/backupreader/backups
      - ${IMAGES_FOLDER:?IMAGES_FOLDER environment variable must be set}:/home/backupreader/images:ro
#    restart: always

  ropewiki_mailserver:
    image: ropewiki/mailserver
    hostname: ropewiki_mailserver
    build:
      context: .
      dockerfile: mailserver/Dockerfile
    logging:
      driver: json-file
      options:
        max-size: 10m
    environment:
      - RELAY_HOST_NAME=${WG_HOSTNAME:-localhost}
      - EXT_RELAY_HOST=${RW_SMTP_HOST:-smtp.gmail.com}
      - EXT_RELAY_PORT=${RW_SMTP_PORT:-587}
      - SMTP_LOGIN="${RW_SMTP_USERNAME:?RW_SMTP_USERNAME must be non-empty}"
      - SMTP_PASSWORD="${RW_SMTP_PASSWORD:?RW_SMTP_PASSWORD must be non-empty}"
      - USE_TLS=yes  # Use TLS to talk upstream to the internet
      - TLS_VERIFY=may
      - INBOUND_TLS=no  # Don't require local clients to use TLS
      - ACCEPTED_NETWORKS=172.16.0.0/12  # Only accept connections from docker's internal network

volumes:
  ropewiki_database_storage:
    name: ropewiki_database_storage
  ropewiki_proxy_certs:
    name: ropewiki_proxy_certs
